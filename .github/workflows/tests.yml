name: PyDoll Tests Suite

on: 
  push:
  pull_request:
    
jobs:
  tests:
    runs-on: ubuntu-latest
    # Add security hardening
    permissions:
      contents: read
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      
      # Add caching for better performance
      - name: Cache Poetry dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry
          key: poetry-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            poetry-${{ runner.os }}-${{ matrix.python-version }}-
      
      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry
      
      - name: Configure Poetry
        run: |
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true
      
      - name: Install dependencies
        run: poetry install
      
      - name: Run tests with coverage
        run: |
          poetry run pytest -s -x --cov=pydoll -vv --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          file: ./coverage.xml
          flags: tests
          name: PyDoll Tests
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
