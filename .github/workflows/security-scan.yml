name: Security Scan

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]
  schedule:
    - cron: '0 6 * * 1'  # Weekly on Monday at 6 AM UTC

jobs:
  security-scan:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: pip-security-${{ runner.os }}-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          pip-security-${{ runner.os }}-

    - name: Install security tools
      run: |
        python -m pip install --upgrade pip
        python -m pip install poetry
        poetry install
        # Install security scanning tools
        pip install bandit[toml] safety semgrep

    - name: Run Bandit Security Scan
      run: |
        bandit -r pydoll/ -f json -o bandit-report.json
        bandit -r pydoll/ -f txt
      continue-on-error: true

    - name: Run Safety Security Scan
      run: |
        safety check --json --output safety-report.json
        safety check
      continue-on-error: true

    - name: Run Semgrep Security Scan
      run: |
        semgrep --config=auto pydoll/ --json --output=semgrep-report.json
        semgrep --config=auto pydoll/
      continue-on-error: true

    - name: Upload Bandit results to GitHub Security
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: bandit-report.json
        category: bandit
      continue-on-error: true

    - name: Upload security scan results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-scan-results
        path: |
          bandit-report.json
          safety-report.json
          semgrep-report.json
        retention-days: 30

  dependency-review:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    permissions:
      contents: read
      pull-requests: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Dependency Review
      uses: actions/dependency-review-action@v4
      with:
        fail-on-severity: moderate
        allow-licenses: MIT, Apache-2.0, BSD-3-Clause, BSD-2-Clause, ISC
        # Comment on PR with results
        comment-summary-in-pr: always 